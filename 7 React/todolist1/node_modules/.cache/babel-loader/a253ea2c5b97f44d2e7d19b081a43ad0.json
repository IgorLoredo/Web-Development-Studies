{"ast":null,"code":"var _jsxFileName = \"/home/luiz/Desktop/react/todolist1/src/ToDolist.js\";\nimport React, { Component } from 'react';\nimport TodoItems from \"./TodoItems\"; //Importa o componente de itens \n\nimport \"./ToDolist.css\";\n\nclass ToDolist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [] //Array de itens \n\n    };\n    this.addItem = this.addItem.bind(this); //não sei muito bem para que serve, ajudou em escolpo\n\n    this.deleteItem = this.deleteItem.bind(this); //não sei muito bem para que serve, ajudou em escolpo\n  }\n\n  addItem(e) {\n    if (this._inputElement.value !== \"\") {\n      //verifica se a pessoa digitou algo \n      var newItem = {\n        text: this._inputElement.value,\n        //cria um objeto com o conteúdo do input e usa o horário de key\n        key: Date.now()\n      };\n      this.setState(prevState => {\n        //não entendi prevState e setState\n        return {\n          items: prevState.items.concat(newItem)\n        };\n      });\n    }\n\n    this._inputElement.value = \"\"; //Zera o input que estava digitado\n\n    console.log(this.state.items);\n    e.preventDefault(); //impede f5\n  }\n\n  deleteItem(key) {\n    var filteredItems = this.state.items.filter(function (item) {\n      //O método filter() cria um novo array com todos os elementos que passaram no teste implementado pela função fornecida\n      return item.key !== key;\n    });\n    this.setState({\n      items: filteredItems\n    });\n  }\n\n  render() {\n    //onSubmit chama addItem\n    //ACHO que ref faz com que o valor digitado seja salvo na variável _inputElement \n    return React.createElement(\"div\", {\n      className: \"todoListMain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: a => this._inputElement = a,\n      placeholder: \"Digite nova tarefa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Adicionar\"))), React.createElement(TodoItems, {\n      entries: this.state.items //Aqui é onde de fato é passado o array ao componente que renderizará os itens\n      ,\n      delete: this.deleteItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ToDolist;","map":{"version":3,"sources":["/home/luiz/Desktop/react/todolist1/src/ToDolist.js"],"names":["React","Component","TodoItems","ToDolist","constructor","props","state","items","addItem","bind","deleteItem","e","_inputElement","value","newItem","text","key","Date","now","setState","prevState","concat","console","log","preventDefault","filteredItems","filter","item","render","a"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAAqC;;AACrC,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC7BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAGA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE,CACG;;AADH,KAAb;AAIA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf,CARc,CAQ0B;;AACxC,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB,CATc,CASiC;AAElD;;AAEDD,EAAAA,OAAO,CAACG,CAAD,EAAI;AACP,QAAG,KAAKC,aAAL,CAAmBC,KAAnB,KAA6B,EAAhC,EAAmC;AAAE;AACjC,UAAIC,OAAO,GAAG;AACVC,QAAAA,IAAI,EAAE,KAAKH,aAAL,CAAmBC,KADf;AACuB;AACjCG,QAAAA,GAAG,EAAEC,IAAI,CAACC,GAAL;AAFK,OAAd;AAKA,WAAKC,QAAL,CAAeC,SAAD,IAAe;AAAE;AAC3B,eAAM;AACFb,UAAAA,KAAK,EAAEa,SAAS,CAACb,KAAV,CAAgBc,MAAhB,CAAuBP,OAAvB;AADL,SAAN;AAGH,OAJD;AAKH;;AAGD,SAAKF,aAAL,CAAmBC,KAAnB,GAA2B,EAA3B,CAfO,CAewB;;AAE/BS,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWC,KAAvB;AAEAI,IAAAA,CAAC,CAACa,cAAF,GAnBO,CAmBa;AAEvB;;AAEDd,EAAAA,UAAU,CAACM,GAAD,EAAK;AACX,QAAIS,aAAa,GAAG,KAAKnB,KAAL,CAAWC,KAAX,CAAiBmB,MAAjB,CAAwB,UAASC,IAAT,EAAc;AAAE;AACxD,aAAOA,IAAI,CAACX,GAAL,KAAaA,GAApB;AACH,KAFmB,CAApB;AAIA,SAAKG,QAAL,CAAc;AACVZ,MAAAA,KAAK,EAAEkB;AADG,KAAd;AAGH;;AAEDG,EAAAA,MAAM,GAAE;AACJ;AACA;AACA,WACI;AAAK,MAAA,SAAS,EAAG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAG,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAI,KAAKpB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,GAAG,EAAKqB,CAAD,IAAO,KAAKjB,aAAL,GAAqBiB,CAA1C;AAA6C,MAAA,WAAW,EAAG,oBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,IAAI,EAAG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CADJ,CADJ,EAOI,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAI,KAAKvB,KAAL,CAAWC,KAAjC,CAAwC;AAAxC;AACA,MAAA,MAAM,EAAI,KAAKG,UADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ;AAaH;;AA/D4B;;AAmEjC,eAAeP,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport TodoItems from \"./TodoItems\"; //Importa o componente de itens \nimport \"./ToDolist.css\";\n\nclass ToDolist extends Component {\n    constructor(props){\n        super(props);\n\n        \n        this.state = {\n            items: []   //Array de itens \n        };\n\n        this.addItem = this.addItem.bind(this); //não sei muito bem para que serve, ajudou em escolpo\n        this.deleteItem = this.deleteItem.bind(this);  //não sei muito bem para que serve, ajudou em escolpo\n    \n    }\n\n    addItem(e) {\n        if(this._inputElement.value !== \"\"){ //verifica se a pessoa digitou algo \n            var newItem = {\n                text: this._inputElement.value,  //cria um objeto com o conteúdo do input e usa o horário de key\n                key: Date.now()\n            };\n\n            this.setState((prevState) => { //não entendi prevState e setState\n                return{\n                    items: prevState.items.concat(newItem)\n                }\n            });\n        }\n\n\n        this._inputElement.value = \"\"; //Zera o input que estava digitado\n\n        console.log(this.state.items);\n\n        e.preventDefault(); //impede f5\n        \n    }\n\n    deleteItem(key){\n        var filteredItems = this.state.items.filter(function(item){ //O método filter() cria um novo array com todos os elementos que passaram no teste implementado pela função fornecida\n            return(item.key !== key) \n        });\n\n        this.setState({\n            items: filteredItems\n        })\n    }\n\n    render(){\n        //onSubmit chama addItem\n        //ACHO que ref faz com que o valor digitado seja salvo na variável _inputElement \n        return (\n            <div className = \"todoListMain\">\n                <div className = \"header\">\n                    <form onSubmit = {this.addItem}>  \n                        <input ref = {(a) => this._inputElement = a} placeholder = \"Digite nova tarefa\"></input>\n                        <button type = 'submit'>Adicionar</button>\n                    </form>\n                </div>\n                <TodoItems entries = {this.state.items} //Aqui é onde de fato é passado o array ao componente que renderizará os itens\n                delete = {this.deleteItem}/>\n            </div>\n        \n        );\n    }\n\n}\n\nexport default ToDolist;"]},"metadata":{},"sourceType":"module"}